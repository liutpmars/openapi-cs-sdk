// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OrderTransactionData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TigerOpenAPI.Quote.Pb {

  /// <summary>Holder for reflection information generated from OrderTransactionData.proto</summary>
  public static partial class OrderTransactionDataReflection {

    #region Descriptor
    /// <summary>File descriptor for OrderTransactionData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrderTransactionDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpPcmRlclRyYW5zYWN0aW9uRGF0YS5wcm90bxI0Y29tLnRpZ2VyYnJva2Vy",
            "cy5zdG9jay5vcGVuYXBpLmNsaWVudC5zb2NrZXQuZGF0YS5wYiLOAgoUT3Jk",
            "ZXJUcmFuc2FjdGlvbkRhdGESCgoCaWQYASABKBISDwoHb3JkZXJJZBgCIAEo",
            "EhIPCgdhY2NvdW50GAMgASgJEg4KBnN5bWJvbBgEIAEoCRISCgppZGVudGlm",
            "aWVyGAUgASgJEhIKCm11bHRpcGxpZXIYBiABKA0SDgoGYWN0aW9uGAcgASgJ",
            "Eg4KBm1hcmtldBgIIAEoCRIQCghjdXJyZW5jeRgJIAEoCRIPCgdzZWdUeXBl",
            "GAogASgJEg8KB3NlY1R5cGUYCyABKAkSEwoLZmlsbGVkUHJpY2UYDCABKAES",
            "FgoOZmlsbGVkUXVhbnRpdHkYDSABKBISEgoKY3JlYXRlVGltZRgOIAEoBBIS",
            "Cgp1cGRhdGVUaW1lGA8gASgEEhQKDHRyYW5zYWN0VGltZRgQIAEoBBIRCgl0",
            "aW1lc3RhbXAYESABKARCGKoCFVRpZ2VyT3BlbkFQSS5RdW90ZS5QYmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TigerOpenAPI.Quote.Pb.OrderTransactionData), global::TigerOpenAPI.Quote.Pb.OrderTransactionData.Parser, new[]{ "Id", "OrderId", "Account", "Symbol", "Identifier", "Multiplier", "Action", "Market", "Currency", "SegType", "SecType", "FilledPrice", "FilledQuantity", "CreateTime", "UpdateTime", "TransactTime", "Timestamp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class OrderTransactionData : pb::IMessage<OrderTransactionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderTransactionData> _parser = new pb::MessageParser<OrderTransactionData>(() => new OrderTransactionData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OrderTransactionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TigerOpenAPI.Quote.Pb.OrderTransactionDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderTransactionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderTransactionData(OrderTransactionData other) : this() {
      id_ = other.id_;
      orderId_ = other.orderId_;
      account_ = other.account_;
      symbol_ = other.symbol_;
      identifier_ = other.identifier_;
      multiplier_ = other.multiplier_;
      action_ = other.action_;
      market_ = other.market_;
      currency_ = other.currency_;
      segType_ = other.segType_;
      secType_ = other.secType_;
      filledPrice_ = other.filledPrice_;
      filledQuantity_ = other.filledQuantity_;
      createTime_ = other.createTime_;
      updateTime_ = other.updateTime_;
      transactTime_ = other.transactTime_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderTransactionData Clone() {
      return new OrderTransactionData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    /// transact id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 2;
    private long orderId_;
    /// <summary>
    /// unique order id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 3;
    private string account_ = "";
    /// <summary>
    /// user account
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 4;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identifier" field.</summary>
    public const int IdentifierFieldNumber = 5;
    private string identifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Identifier {
      get { return identifier_; }
      set {
        identifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "multiplier" field.</summary>
    public const int MultiplierFieldNumber = 6;
    private uint multiplier_;
    /// <summary>
    /// multiplier for futures, options, warrants and CBBC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Multiplier {
      get { return multiplier_; }
      set {
        multiplier_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 7;
    private string action_ = "";
    /// <summary>
    /// BUY or SELL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market" field.</summary>
    public const int MarketFieldNumber = 8;
    private string market_ = "";
    /// <summary>
    /// market. US, HK, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Market {
      get { return market_; }
      set {
        market_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 9;
    private string currency_ = "";
    /// <summary>
    /// currency. USD, HKD, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "segType" field.</summary>
    public const int SegTypeFieldNumber = 10;
    private string segType_ = "";
    /// <summary>
    /// Securities Category C: (Commodities Futures), S: (Securities Stocks)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SegType {
      get { return segType_; }
      set {
        segType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secType" field.</summary>
    public const int SecTypeFieldNumber = 11;
    private string secType_ = "";
    /// <summary>
    /// STK Stocks, OPT Options, WAR Warrants, IOPT CBBC, CASH FOREX, FUT Futures, FOP Future Options
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecType {
      get { return secType_; }
      set {
        secType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filledPrice" field.</summary>
    public const int FilledPriceFieldNumber = 12;
    private double filledPrice_;
    /// <summary>
    /// filled price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FilledPrice {
      get { return filledPrice_; }
      set {
        filledPrice_ = value;
      }
    }

    /// <summary>Field number for the "filledQuantity" field.</summary>
    public const int FilledQuantityFieldNumber = 13;
    private long filledQuantity_;
    /// <summary>
    /// filled quantity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FilledQuantity {
      get { return filledQuantity_; }
      set {
        filledQuantity_ = value;
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 14;
    private ulong createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "updateTime" field.</summary>
    public const int UpdateTimeFieldNumber = 15;
    private ulong updateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "transactTime" field.</summary>
    public const int TransactTimeFieldNumber = 16;
    private ulong transactTime_;
    /// <summary>
    /// transact time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TransactTime {
      get { return transactTime_; }
      set {
        transactTime_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 17;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OrderTransactionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OrderTransactionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OrderId != other.OrderId) return false;
      if (Account != other.Account) return false;
      if (Symbol != other.Symbol) return false;
      if (Identifier != other.Identifier) return false;
      if (Multiplier != other.Multiplier) return false;
      if (Action != other.Action) return false;
      if (Market != other.Market) return false;
      if (Currency != other.Currency) return false;
      if (SegType != other.SegType) return false;
      if (SecType != other.SecType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FilledPrice, other.FilledPrice)) return false;
      if (FilledQuantity != other.FilledQuantity) return false;
      if (CreateTime != other.CreateTime) return false;
      if (UpdateTime != other.UpdateTime) return false;
      if (TransactTime != other.TransactTime) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (OrderId != 0L) hash ^= OrderId.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Identifier.Length != 0) hash ^= Identifier.GetHashCode();
      if (Multiplier != 0) hash ^= Multiplier.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (Market.Length != 0) hash ^= Market.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (SegType.Length != 0) hash ^= SegType.GetHashCode();
      if (SecType.Length != 0) hash ^= SecType.GetHashCode();
      if (FilledPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FilledPrice);
      if (FilledQuantity != 0L) hash ^= FilledQuantity.GetHashCode();
      if (CreateTime != 0UL) hash ^= CreateTime.GetHashCode();
      if (UpdateTime != 0UL) hash ^= UpdateTime.GetHashCode();
      if (TransactTime != 0UL) hash ^= TransactTime.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(Id);
      }
      if (OrderId != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(OrderId);
      }
      if (Account.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Account);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      if (Identifier.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Identifier);
      }
      if (Multiplier != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Multiplier);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Action);
      }
      if (Market.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Market);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Currency);
      }
      if (SegType.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SegType);
      }
      if (SecType.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SecType);
      }
      if (FilledPrice != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(FilledPrice);
      }
      if (FilledQuantity != 0L) {
        output.WriteRawTag(104);
        output.WriteSInt64(FilledQuantity);
      }
      if (CreateTime != 0UL) {
        output.WriteRawTag(112);
        output.WriteUInt64(CreateTime);
      }
      if (UpdateTime != 0UL) {
        output.WriteRawTag(120);
        output.WriteUInt64(UpdateTime);
      }
      if (TransactTime != 0UL) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(TransactTime);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(136, 1);
        output.WriteUInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(Id);
      }
      if (OrderId != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(OrderId);
      }
      if (Account.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Account);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      if (Identifier.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Identifier);
      }
      if (Multiplier != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Multiplier);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Action);
      }
      if (Market.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Market);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Currency);
      }
      if (SegType.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SegType);
      }
      if (SecType.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SecType);
      }
      if (FilledPrice != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(FilledPrice);
      }
      if (FilledQuantity != 0L) {
        output.WriteRawTag(104);
        output.WriteSInt64(FilledQuantity);
      }
      if (CreateTime != 0UL) {
        output.WriteRawTag(112);
        output.WriteUInt64(CreateTime);
      }
      if (UpdateTime != 0UL) {
        output.WriteRawTag(120);
        output.WriteUInt64(UpdateTime);
      }
      if (TransactTime != 0UL) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(TransactTime);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(136, 1);
        output.WriteUInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Id);
      }
      if (OrderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(OrderId);
      }
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Identifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identifier);
      }
      if (Multiplier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Multiplier);
      }
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (Market.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Market);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (SegType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SegType);
      }
      if (SecType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecType);
      }
      if (FilledPrice != 0D) {
        size += 1 + 8;
      }
      if (FilledQuantity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(FilledQuantity);
      }
      if (CreateTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreateTime);
      }
      if (UpdateTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpdateTime);
      }
      if (TransactTime != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TransactTime);
      }
      if (Timestamp != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OrderTransactionData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.OrderId != 0L) {
        OrderId = other.OrderId;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Identifier.Length != 0) {
        Identifier = other.Identifier;
      }
      if (other.Multiplier != 0) {
        Multiplier = other.Multiplier;
      }
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      if (other.Market.Length != 0) {
        Market = other.Market;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.SegType.Length != 0) {
        SegType = other.SegType;
      }
      if (other.SecType.Length != 0) {
        SecType = other.SecType;
      }
      if (other.FilledPrice != 0D) {
        FilledPrice = other.FilledPrice;
      }
      if (other.FilledQuantity != 0L) {
        FilledQuantity = other.FilledQuantity;
      }
      if (other.CreateTime != 0UL) {
        CreateTime = other.CreateTime;
      }
      if (other.UpdateTime != 0UL) {
        UpdateTime = other.UpdateTime;
      }
      if (other.TransactTime != 0UL) {
        TransactTime = other.TransactTime;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadSInt64();
            break;
          }
          case 16: {
            OrderId = input.ReadSInt64();
            break;
          }
          case 26: {
            Account = input.ReadString();
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 42: {
            Identifier = input.ReadString();
            break;
          }
          case 48: {
            Multiplier = input.ReadUInt32();
            break;
          }
          case 58: {
            Action = input.ReadString();
            break;
          }
          case 66: {
            Market = input.ReadString();
            break;
          }
          case 74: {
            Currency = input.ReadString();
            break;
          }
          case 82: {
            SegType = input.ReadString();
            break;
          }
          case 90: {
            SecType = input.ReadString();
            break;
          }
          case 97: {
            FilledPrice = input.ReadDouble();
            break;
          }
          case 104: {
            FilledQuantity = input.ReadSInt64();
            break;
          }
          case 112: {
            CreateTime = input.ReadUInt64();
            break;
          }
          case 120: {
            UpdateTime = input.ReadUInt64();
            break;
          }
          case 128: {
            TransactTime = input.ReadUInt64();
            break;
          }
          case 136: {
            Timestamp = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadSInt64();
            break;
          }
          case 16: {
            OrderId = input.ReadSInt64();
            break;
          }
          case 26: {
            Account = input.ReadString();
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 42: {
            Identifier = input.ReadString();
            break;
          }
          case 48: {
            Multiplier = input.ReadUInt32();
            break;
          }
          case 58: {
            Action = input.ReadString();
            break;
          }
          case 66: {
            Market = input.ReadString();
            break;
          }
          case 74: {
            Currency = input.ReadString();
            break;
          }
          case 82: {
            SegType = input.ReadString();
            break;
          }
          case 90: {
            SecType = input.ReadString();
            break;
          }
          case 97: {
            FilledPrice = input.ReadDouble();
            break;
          }
          case 104: {
            FilledQuantity = input.ReadSInt64();
            break;
          }
          case 112: {
            CreateTime = input.ReadUInt64();
            break;
          }
          case 120: {
            UpdateTime = input.ReadUInt64();
            break;
          }
          case 128: {
            TransactTime = input.ReadUInt64();
            break;
          }
          case 136: {
            Timestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
