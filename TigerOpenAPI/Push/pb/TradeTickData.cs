// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TradeTickData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TigerOpenAPI.Quote.Pb {

  /// <summary>Holder for reflection information generated from TradeTickData.proto</summary>
  public static partial class TradeTickDataReflection {

    #region Descriptor
    /// <summary>File descriptor for TradeTickData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TradeTickDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNUcmFkZVRpY2tEYXRhLnByb3RvEjRjb20udGlnZXJicm9rZXJzLnN0b2Nr",
            "Lm9wZW5hcGkuY2xpZW50LnNvY2tldC5kYXRhLnBiIvcCCg1UcmFkZVRpY2tE",
            "YXRhEg4KBnN5bWJvbBgBIAEoCRIMCgR0eXBlGAIgASgJEgwKBGNvbmQYAyAB",
            "KAkSCgoCc24YBCABKAMSEQoJcHJpY2VCYXNlGAUgASgDEhMKC3ByaWNlT2Zm",
            "c2V0GAYgASgFEgwKBHRpbWUYByADKAMSDQoFcHJpY2UYCCADKAMSDgoGdm9s",
            "dW1lGAkgAygDEhAKCHBhcnRDb2RlGAogAygJEhIKCnF1b3RlTGV2ZWwYCyAB",
            "KAkSEQoJdGltZXN0YW1wGAwgASgEEg8KB3NlY1R5cGUYDSABKAkSYQoKbWVy",
            "Z2VkVm9scxgOIAMoCzJNLmNvbS50aWdlcmJyb2tlcnMuc3RvY2sub3BlbmFw",
            "aS5jbGllbnQuc29ja2V0LmRhdGEucGIuVHJhZGVUaWNrRGF0YS5NZXJnZWRW",
            "b2waLAoJTWVyZ2VkVm9sEhIKCm1lcmdlVGltZXMYASABKAUSCwoDdm9sGAIg",
            "AygDQhiqAhVUaWdlck9wZW5BUEkuUXVvdGUuUGJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TigerOpenAPI.Quote.Pb.TradeTickData), global::TigerOpenAPI.Quote.Pb.TradeTickData.Parser, new[]{ "Symbol", "Type", "Cond", "Sn", "PriceBase", "PriceOffset", "Time", "Price", "Volume", "PartCode", "QuoteLevel", "Timestamp", "SecType", "MergedVols" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TigerOpenAPI.Quote.Pb.TradeTickData.Types.MergedVol), global::TigerOpenAPI.Quote.Pb.TradeTickData.Types.MergedVol.Parser, new[]{ "MergeTimes", "Vol" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TradeTickData : pb::IMessage<TradeTickData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradeTickData> _parser = new pb::MessageParser<TradeTickData>(() => new TradeTickData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradeTickData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TigerOpenAPI.Quote.Pb.TradeTickDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeTickData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeTickData(TradeTickData other) : this() {
      symbol_ = other.symbol_;
      type_ = other.type_;
      cond_ = other.cond_;
      sn_ = other.sn_;
      priceBase_ = other.priceBase_;
      priceOffset_ = other.priceOffset_;
      time_ = other.time_.Clone();
      price_ = other.price_.Clone();
      volume_ = other.volume_.Clone();
      partCode_ = other.partCode_.Clone();
      quoteLevel_ = other.quoteLevel_;
      timestamp_ = other.timestamp_;
      secType_ = other.secType_;
      mergedVols_ = other.mergedVols_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeTickData Clone() {
      return new TradeTickData(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    /// <summary>
    /// tick type 逐笔方向（+-* 组成的字符串）(Futures are not supported)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cond" field.</summary>
    public const int CondFieldNumber = 3;
    private string cond_ = "";
    /// <summary>
    /// 成交条件（该值为空时表示所有成交都是正常成交）(Futures are not supported)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Cond {
      get { return cond_; }
      set {
        cond_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sn" field.</summary>
    public const int SnFieldNumber = 4;
    private long sn_;
    /// <summary>
    /// 首个逐笔对应的序号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Sn {
      get { return sn_; }
      set {
        sn_ = value;
      }
    }

    /// <summary>Field number for the "priceBase" field.</summary>
    public const int PriceBaseFieldNumber = 5;
    private long priceBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PriceBase {
      get { return priceBase_; }
      set {
        priceBase_ = value;
      }
    }

    /// <summary>Field number for the "priceOffset" field.</summary>
    public const int PriceOffsetFieldNumber = 6;
    private int priceOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PriceOffset {
      get { return priceOffset_; }
      set {
        priceOffset_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 7;
    private static readonly pb::FieldCodec<long> _repeated_time_codec
        = pb::FieldCodec.ForInt64(58);
    private readonly pbc::RepeatedField<long> time_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 压缩后的成交时间，恢复为原时间信息 time[i] = time[i] + time[i-1]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Time {
      get { return time_; }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 8;
    private static readonly pb::FieldCodec<long> _repeated_price_codec
        = pb::FieldCodec.ForInt64(66);
    private readonly pbc::RepeatedField<long> price_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 压缩后的成交价格，恢复为原始价格信息 price[i] = (priceBase + price[i]) / 10^priceOffset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Price {
      get { return price_; }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 9;
    private static readonly pb::FieldCodec<long> _repeated_volume_codec
        = pb::FieldCodec.ForInt64(74);
    private readonly pbc::RepeatedField<long> volume_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 原始的成交量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Volume {
      get { return volume_; }
    }

    /// <summary>Field number for the "partCode" field.</summary>
    public const int PartCodeFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_partCode_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> partCode_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 交易所代码，一般是 a ~ z 字符(Futures are not supported)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PartCode {
      get { return partCode_; }
    }

    /// <summary>Field number for the "quoteLevel" field.</summary>
    public const int QuoteLevelFieldNumber = 11;
    private string quoteLevel_ = "";
    /// <summary>
    /// (Futures are not supported)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string QuoteLevel {
      get { return quoteLevel_; }
      set {
        quoteLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 12;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "secType" field.</summary>
    public const int SecTypeFieldNumber = 13;
    private string secType_ = "";
    /// <summary>
    /// STK Stocks, FUT Futures
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecType {
      get { return secType_; }
      set {
        secType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mergedVols" field.</summary>
    public const int MergedVolsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::TigerOpenAPI.Quote.Pb.TradeTickData.Types.MergedVol> _repeated_mergedVols_codec
        = pb::FieldCodec.ForMessage(114, global::TigerOpenAPI.Quote.Pb.TradeTickData.Types.MergedVol.Parser);
    private readonly pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.TradeTickData.Types.MergedVol> mergedVols_ = new pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.TradeTickData.Types.MergedVol>();
    /// <summary>
    /// 原始合并次数(Only futures are supported)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.TradeTickData.Types.MergedVol> MergedVols {
      get { return mergedVols_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradeTickData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradeTickData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Type != other.Type) return false;
      if (Cond != other.Cond) return false;
      if (Sn != other.Sn) return false;
      if (PriceBase != other.PriceBase) return false;
      if (PriceOffset != other.PriceOffset) return false;
      if(!time_.Equals(other.time_)) return false;
      if(!price_.Equals(other.price_)) return false;
      if(!volume_.Equals(other.volume_)) return false;
      if(!partCode_.Equals(other.partCode_)) return false;
      if (QuoteLevel != other.QuoteLevel) return false;
      if (Timestamp != other.Timestamp) return false;
      if (SecType != other.SecType) return false;
      if(!mergedVols_.Equals(other.mergedVols_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Cond.Length != 0) hash ^= Cond.GetHashCode();
      if (Sn != 0L) hash ^= Sn.GetHashCode();
      if (PriceBase != 0L) hash ^= PriceBase.GetHashCode();
      if (PriceOffset != 0) hash ^= PriceOffset.GetHashCode();
      hash ^= time_.GetHashCode();
      hash ^= price_.GetHashCode();
      hash ^= volume_.GetHashCode();
      hash ^= partCode_.GetHashCode();
      if (QuoteLevel.Length != 0) hash ^= QuoteLevel.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (SecType.Length != 0) hash ^= SecType.GetHashCode();
      hash ^= mergedVols_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Cond.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cond);
      }
      if (Sn != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Sn);
      }
      if (PriceBase != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(PriceBase);
      }
      if (PriceOffset != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PriceOffset);
      }
      time_.WriteTo(output, _repeated_time_codec);
      price_.WriteTo(output, _repeated_price_codec);
      volume_.WriteTo(output, _repeated_volume_codec);
      partCode_.WriteTo(output, _repeated_partCode_codec);
      if (QuoteLevel.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(QuoteLevel);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(Timestamp);
      }
      if (SecType.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SecType);
      }
      mergedVols_.WriteTo(output, _repeated_mergedVols_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Cond.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cond);
      }
      if (Sn != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Sn);
      }
      if (PriceBase != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(PriceBase);
      }
      if (PriceOffset != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PriceOffset);
      }
      time_.WriteTo(ref output, _repeated_time_codec);
      price_.WriteTo(ref output, _repeated_price_codec);
      volume_.WriteTo(ref output, _repeated_volume_codec);
      partCode_.WriteTo(ref output, _repeated_partCode_codec);
      if (QuoteLevel.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(QuoteLevel);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(Timestamp);
      }
      if (SecType.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SecType);
      }
      mergedVols_.WriteTo(ref output, _repeated_mergedVols_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Cond.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cond);
      }
      if (Sn != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Sn);
      }
      if (PriceBase != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PriceBase);
      }
      if (PriceOffset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriceOffset);
      }
      size += time_.CalculateSize(_repeated_time_codec);
      size += price_.CalculateSize(_repeated_price_codec);
      size += volume_.CalculateSize(_repeated_volume_codec);
      size += partCode_.CalculateSize(_repeated_partCode_codec);
      if (QuoteLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuoteLevel);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (SecType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecType);
      }
      size += mergedVols_.CalculateSize(_repeated_mergedVols_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradeTickData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Cond.Length != 0) {
        Cond = other.Cond;
      }
      if (other.Sn != 0L) {
        Sn = other.Sn;
      }
      if (other.PriceBase != 0L) {
        PriceBase = other.PriceBase;
      }
      if (other.PriceOffset != 0) {
        PriceOffset = other.PriceOffset;
      }
      time_.Add(other.time_);
      price_.Add(other.price_);
      volume_.Add(other.volume_);
      partCode_.Add(other.partCode_);
      if (other.QuoteLevel.Length != 0) {
        QuoteLevel = other.QuoteLevel;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.SecType.Length != 0) {
        SecType = other.SecType;
      }
      mergedVols_.Add(other.mergedVols_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            Cond = input.ReadString();
            break;
          }
          case 32: {
            Sn = input.ReadInt64();
            break;
          }
          case 40: {
            PriceBase = input.ReadInt64();
            break;
          }
          case 48: {
            PriceOffset = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            time_.AddEntriesFrom(input, _repeated_time_codec);
            break;
          }
          case 66:
          case 64: {
            price_.AddEntriesFrom(input, _repeated_price_codec);
            break;
          }
          case 74:
          case 72: {
            volume_.AddEntriesFrom(input, _repeated_volume_codec);
            break;
          }
          case 82: {
            partCode_.AddEntriesFrom(input, _repeated_partCode_codec);
            break;
          }
          case 90: {
            QuoteLevel = input.ReadString();
            break;
          }
          case 96: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 106: {
            SecType = input.ReadString();
            break;
          }
          case 114: {
            mergedVols_.AddEntriesFrom(input, _repeated_mergedVols_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            Cond = input.ReadString();
            break;
          }
          case 32: {
            Sn = input.ReadInt64();
            break;
          }
          case 40: {
            PriceBase = input.ReadInt64();
            break;
          }
          case 48: {
            PriceOffset = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            time_.AddEntriesFrom(ref input, _repeated_time_codec);
            break;
          }
          case 66:
          case 64: {
            price_.AddEntriesFrom(ref input, _repeated_price_codec);
            break;
          }
          case 74:
          case 72: {
            volume_.AddEntriesFrom(ref input, _repeated_volume_codec);
            break;
          }
          case 82: {
            partCode_.AddEntriesFrom(ref input, _repeated_partCode_codec);
            break;
          }
          case 90: {
            QuoteLevel = input.ReadString();
            break;
          }
          case 96: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 106: {
            SecType = input.ReadString();
            break;
          }
          case 114: {
            mergedVols_.AddEntriesFrom(ref input, _repeated_mergedVols_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TradeTickData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class MergedVol : pb::IMessage<MergedVol>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MergedVol> _parser = new pb::MessageParser<MergedVol>(() => new MergedVol());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MergedVol> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TigerOpenAPI.Quote.Pb.TradeTickData.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MergedVol() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MergedVol(MergedVol other) : this() {
          mergeTimes_ = other.mergeTimes_;
          vol_ = other.vol_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MergedVol Clone() {
          return new MergedVol(this);
        }

        /// <summary>Field number for the "mergeTimes" field.</summary>
        public const int MergeTimesFieldNumber = 1;
        private int mergeTimes_;
        /// <summary>
        /// 原始合并次数
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int MergeTimes {
          get { return mergeTimes_; }
          set {
            mergeTimes_ = value;
          }
        }

        /// <summary>Field number for the "vol" field.</summary>
        public const int VolFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_vol_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> vol_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// 原始合并的成交量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<long> Vol {
          get { return vol_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MergedVol);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MergedVol other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MergeTimes != other.MergeTimes) return false;
          if(!vol_.Equals(other.vol_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (MergeTimes != 0) hash ^= MergeTimes.GetHashCode();
          hash ^= vol_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MergeTimes != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(MergeTimes);
          }
          vol_.WriteTo(output, _repeated_vol_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MergeTimes != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(MergeTimes);
          }
          vol_.WriteTo(ref output, _repeated_vol_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (MergeTimes != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MergeTimes);
          }
          size += vol_.CalculateSize(_repeated_vol_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MergedVol other) {
          if (other == null) {
            return;
          }
          if (other.MergeTimes != 0) {
            MergeTimes = other.MergeTimes;
          }
          vol_.Add(other.vol_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MergeTimes = input.ReadInt32();
                break;
              }
              case 18:
              case 16: {
                vol_.AddEntriesFrom(input, _repeated_vol_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MergeTimes = input.ReadInt32();
                break;
              }
              case 18:
              case 16: {
                vol_.AddEntriesFrom(ref input, _repeated_vol_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
