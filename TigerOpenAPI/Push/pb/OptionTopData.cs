// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OptionTopData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TigerOpenAPI.Quote.Pb {

  /// <summary>Holder for reflection information generated from OptionTopData.proto</summary>
  public static partial class OptionTopDataReflection {

    #region Descriptor
    /// <summary>File descriptor for OptionTopData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OptionTopDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNPcHRpb25Ub3BEYXRhLnByb3RvEjRjb20udGlnZXJicm9rZXJzLnN0b2Nr",
            "Lm9wZW5hcGkuY2xpZW50LnNvY2tldC5kYXRhLnBiItkFCg1PcHRpb25Ub3BE",
            "YXRhEg4KBm1hcmtldBgBIAEoCRIRCgl0aW1lc3RhbXAYAiABKAMSXAoHdG9w",
            "RGF0YRgDIAMoCzJLLmNvbS50aWdlcmJyb2tlcnMuc3RvY2sub3BlbmFwaS5j",
            "bGllbnQuc29ja2V0LmRhdGEucGIuT3B0aW9uVG9wRGF0YS5Ub3BEYXRhGtsB",
            "CgdUb3BEYXRhEhIKCnRhcmdldE5hbWUYASABKAkSXgoIYmlnT3JkZXIYAiAD",
            "KAsyTC5jb20udGlnZXJicm9rZXJzLnN0b2NrLm9wZW5hcGkuY2xpZW50LnNv",
            "Y2tldC5kYXRhLnBiLk9wdGlvblRvcERhdGEuQmlnT3JkZXISXAoEaXRlbRgD",
            "IAMoCzJOLmNvbS50aWdlcmJyb2tlcnMuc3RvY2sub3BlbmFwaS5jbGllbnQu",
            "c29ja2V0LmRhdGEucGIuT3B0aW9uVG9wRGF0YS5PcHRpb25JdGVtGpgBCghC",
            "aWdPcmRlchIOCgZzeW1ib2wYASABKAkSDgoGZXhwaXJ5GAIgASgJEg4KBnN0",
            "cmlrZRgDIAEoCRINCgVyaWdodBgEIAEoCRILCgNkaXIYBSABKAkSDgoGdm9s",
            "dW1lGAYgASgBEg0KBXByaWNlGAcgASgBEg4KBmFtb3VudBgIIAEoARIRCgl0",
            "cmFkZVRpbWUYCSABKAMazQEKCk9wdGlvbkl0ZW0SDgoGc3ltYm9sGAEgASgJ",
            "Eg4KBmV4cGlyeRgCIAEoCRIOCgZzdHJpa2UYAyABKAkSDQoFcmlnaHQYBCAB",
            "KAkSEwoLdG90YWxBbW91bnQYBSABKAESEwoLdG90YWxWb2x1bWUYBiABKAES",
            "FAoMdG90YWxPcGVuSW50GAcgASgBEhcKD3ZvbHVtZVRvT3BlbkludBgIIAEo",
            "ARITCgtsYXRlc3RQcmljZRgJIAEoARISCgp1cGRhdGVUaW1lGAogASgDQhiq",
            "AhVUaWdlck9wZW5BUEkuUXVvdGUuUGJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TigerOpenAPI.Quote.Pb.OptionTopData), global::TigerOpenAPI.Quote.Pb.OptionTopData.Parser, new[]{ "Market", "Timestamp", "TopData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.TopData), global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.TopData.Parser, new[]{ "TargetName", "BigOrder", "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.BigOrder), global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.BigOrder.Parser, new[]{ "Symbol", "Expiry", "Strike", "Right", "Dir", "Volume", "Price", "Amount", "TradeTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.OptionItem), global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.OptionItem.Parser, new[]{ "Symbol", "Expiry", "Strike", "Right", "TotalAmount", "TotalVolume", "TotalOpenInt", "VolumeToOpenInt", "LatestPrice", "UpdateTime" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class OptionTopData : pb::IMessage<OptionTopData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OptionTopData> _parser = new pb::MessageParser<OptionTopData>(() => new OptionTopData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OptionTopData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TigerOpenAPI.Quote.Pb.OptionTopDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionTopData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionTopData(OptionTopData other) : this() {
      market_ = other.market_;
      timestamp_ = other.timestamp_;
      topData_ = other.topData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionTopData Clone() {
      return new OptionTopData(this);
    }

    /// <summary>Field number for the "market" field.</summary>
    public const int MarketFieldNumber = 1;
    private string market_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Market {
      get { return market_; }
      set {
        market_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "topData" field.</summary>
    public const int TopDataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.TopData> _repeated_topData_codec
        = pb::FieldCodec.ForMessage(26, global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.TopData.Parser);
    private readonly pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.TopData> topData_ = new pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.TopData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.TopData> TopData {
      get { return topData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OptionTopData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OptionTopData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Market != other.Market) return false;
      if (Timestamp != other.Timestamp) return false;
      if(!topData_.Equals(other.topData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Market.Length != 0) hash ^= Market.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      hash ^= topData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Market.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Market);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      topData_.WriteTo(output, _repeated_topData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Market.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Market);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      topData_.WriteTo(ref output, _repeated_topData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Market.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Market);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      size += topData_.CalculateSize(_repeated_topData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OptionTopData other) {
      if (other == null) {
        return;
      }
      if (other.Market.Length != 0) {
        Market = other.Market;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      topData_.Add(other.topData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Market = input.ReadString();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            topData_.AddEntriesFrom(input, _repeated_topData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Market = input.ReadString();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            topData_.AddEntriesFrom(ref input, _repeated_topData_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OptionTopData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class TopData : pb::IMessage<TopData>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TopData> _parser = new pb::MessageParser<TopData>(() => new TopData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TopData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TigerOpenAPI.Quote.Pb.OptionTopData.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TopData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TopData(TopData other) : this() {
          targetName_ = other.targetName_;
          bigOrder_ = other.bigOrder_.Clone();
          item_ = other.item_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TopData Clone() {
          return new TopData(this);
        }

        /// <summary>Field number for the "targetName" field.</summary>
        public const int TargetNameFieldNumber = 1;
        private string targetName_ = "";
        /// <summary>
        /// bigOrder, volume, amount, openInt
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TargetName {
          get { return targetName_; }
          set {
            targetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "bigOrder" field.</summary>
        public const int BigOrderFieldNumber = 2;
        private static readonly pb::FieldCodec<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.BigOrder> _repeated_bigOrder_codec
            = pb::FieldCodec.ForMessage(18, global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.BigOrder.Parser);
        private readonly pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.BigOrder> bigOrder_ = new pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.BigOrder>();
        /// <summary>
        /// large order(bigOrder)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.BigOrder> BigOrder {
          get { return bigOrder_; }
        }

        /// <summary>Field number for the "item" field.</summary>
        public const int ItemFieldNumber = 3;
        private static readonly pb::FieldCodec<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.OptionItem> _repeated_item_codec
            = pb::FieldCodec.ForMessage(26, global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.OptionItem.Parser);
        private readonly pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.OptionItem> item_ = new pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.OptionItem>();
        /// <summary>
        /// target value top list(volume, amount, openInt)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.OptionTopData.Types.OptionItem> Item {
          get { return item_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TopData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TopData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetName != other.TargetName) return false;
          if(!bigOrder_.Equals(other.bigOrder_)) return false;
          if(!item_.Equals(other.item_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetName.Length != 0) hash ^= TargetName.GetHashCode();
          hash ^= bigOrder_.GetHashCode();
          hash ^= item_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TargetName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetName);
          }
          bigOrder_.WriteTo(output, _repeated_bigOrder_codec);
          item_.WriteTo(output, _repeated_item_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TargetName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetName);
          }
          bigOrder_.WriteTo(ref output, _repeated_bigOrder_codec);
          item_.WriteTo(ref output, _repeated_item_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (TargetName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetName);
          }
          size += bigOrder_.CalculateSize(_repeated_bigOrder_codec);
          size += item_.CalculateSize(_repeated_item_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TopData other) {
          if (other == null) {
            return;
          }
          if (other.TargetName.Length != 0) {
            TargetName = other.TargetName;
          }
          bigOrder_.Add(other.bigOrder_);
          item_.Add(other.item_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TargetName = input.ReadString();
                break;
              }
              case 18: {
                bigOrder_.AddEntriesFrom(input, _repeated_bigOrder_codec);
                break;
              }
              case 26: {
                item_.AddEntriesFrom(input, _repeated_item_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TargetName = input.ReadString();
                break;
              }
              case 18: {
                bigOrder_.AddEntriesFrom(ref input, _repeated_bigOrder_codec);
                break;
              }
              case 26: {
                item_.AddEntriesFrom(ref input, _repeated_item_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class BigOrder : pb::IMessage<BigOrder>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BigOrder> _parser = new pb::MessageParser<BigOrder>(() => new BigOrder());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<BigOrder> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TigerOpenAPI.Quote.Pb.OptionTopData.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BigOrder() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BigOrder(BigOrder other) : this() {
          symbol_ = other.symbol_;
          expiry_ = other.expiry_;
          strike_ = other.strike_;
          right_ = other.right_;
          dir_ = other.dir_;
          volume_ = other.volume_;
          price_ = other.price_;
          amount_ = other.amount_;
          tradeTime_ = other.tradeTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BigOrder Clone() {
          return new BigOrder(this);
        }

        /// <summary>Field number for the "symbol" field.</summary>
        public const int SymbolFieldNumber = 1;
        private string symbol_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Symbol {
          get { return symbol_; }
          set {
            symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "expiry" field.</summary>
        public const int ExpiryFieldNumber = 2;
        private string expiry_ = "";
        /// <summary>
        /// formate:yyyyMMdd
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Expiry {
          get { return expiry_; }
          set {
            expiry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "strike" field.</summary>
        public const int StrikeFieldNumber = 3;
        private string strike_ = "";
        /// <summary>
        /// strike price
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Strike {
          get { return strike_; }
          set {
            strike_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "right" field.</summary>
        public const int RightFieldNumber = 4;
        private string right_ = "";
        /// <summary>
        /// CALL/PUT
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Right {
          get { return right_; }
          set {
            right_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "dir" field.</summary>
        public const int DirFieldNumber = 5;
        private string dir_ = "";
        /// <summary>
        /// BUY/SELL/NONE
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Dir {
          get { return dir_; }
          set {
            dir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "volume" field.</summary>
        public const int VolumeFieldNumber = 6;
        private double volume_;
        /// <summary>
        /// target value: volume > 1000
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Volume {
          get { return volume_; }
          set {
            volume_ = value;
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 7;
        private double price_;
        /// <summary>
        /// trade price
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Price {
          get { return price_; }
          set {
            price_ = value;
          }
        }

        /// <summary>Field number for the "amount" field.</summary>
        public const int AmountFieldNumber = 8;
        private double amount_;
        /// <summary>
        /// trade amount
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Amount {
          get { return amount_; }
          set {
            amount_ = value;
          }
        }

        /// <summary>Field number for the "tradeTime" field.</summary>
        public const int TradeTimeFieldNumber = 9;
        private long tradeTime_;
        /// <summary>
        /// trade timestamp
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long TradeTime {
          get { return tradeTime_; }
          set {
            tradeTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as BigOrder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(BigOrder other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Symbol != other.Symbol) return false;
          if (Expiry != other.Expiry) return false;
          if (Strike != other.Strike) return false;
          if (Right != other.Right) return false;
          if (Dir != other.Dir) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Volume, other.Volume)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Amount, other.Amount)) return false;
          if (TradeTime != other.TradeTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
          if (Expiry.Length != 0) hash ^= Expiry.GetHashCode();
          if (Strike.Length != 0) hash ^= Strike.GetHashCode();
          if (Right.Length != 0) hash ^= Right.GetHashCode();
          if (Dir.Length != 0) hash ^= Dir.GetHashCode();
          if (Volume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Volume);
          if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
          if (Amount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Amount);
          if (TradeTime != 0L) hash ^= TradeTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Symbol.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Symbol);
          }
          if (Expiry.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Expiry);
          }
          if (Strike.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Strike);
          }
          if (Right.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Right);
          }
          if (Dir.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Dir);
          }
          if (Volume != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(Volume);
          }
          if (Price != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(Price);
          }
          if (Amount != 0D) {
            output.WriteRawTag(65);
            output.WriteDouble(Amount);
          }
          if (TradeTime != 0L) {
            output.WriteRawTag(72);
            output.WriteInt64(TradeTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Symbol.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Symbol);
          }
          if (Expiry.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Expiry);
          }
          if (Strike.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Strike);
          }
          if (Right.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Right);
          }
          if (Dir.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Dir);
          }
          if (Volume != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(Volume);
          }
          if (Price != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(Price);
          }
          if (Amount != 0D) {
            output.WriteRawTag(65);
            output.WriteDouble(Amount);
          }
          if (TradeTime != 0L) {
            output.WriteRawTag(72);
            output.WriteInt64(TradeTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Symbol.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
          }
          if (Expiry.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Expiry);
          }
          if (Strike.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Strike);
          }
          if (Right.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Right);
          }
          if (Dir.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Dir);
          }
          if (Volume != 0D) {
            size += 1 + 8;
          }
          if (Price != 0D) {
            size += 1 + 8;
          }
          if (Amount != 0D) {
            size += 1 + 8;
          }
          if (TradeTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TradeTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(BigOrder other) {
          if (other == null) {
            return;
          }
          if (other.Symbol.Length != 0) {
            Symbol = other.Symbol;
          }
          if (other.Expiry.Length != 0) {
            Expiry = other.Expiry;
          }
          if (other.Strike.Length != 0) {
            Strike = other.Strike;
          }
          if (other.Right.Length != 0) {
            Right = other.Right;
          }
          if (other.Dir.Length != 0) {
            Dir = other.Dir;
          }
          if (other.Volume != 0D) {
            Volume = other.Volume;
          }
          if (other.Price != 0D) {
            Price = other.Price;
          }
          if (other.Amount != 0D) {
            Amount = other.Amount;
          }
          if (other.TradeTime != 0L) {
            TradeTime = other.TradeTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Symbol = input.ReadString();
                break;
              }
              case 18: {
                Expiry = input.ReadString();
                break;
              }
              case 26: {
                Strike = input.ReadString();
                break;
              }
              case 34: {
                Right = input.ReadString();
                break;
              }
              case 42: {
                Dir = input.ReadString();
                break;
              }
              case 49: {
                Volume = input.ReadDouble();
                break;
              }
              case 57: {
                Price = input.ReadDouble();
                break;
              }
              case 65: {
                Amount = input.ReadDouble();
                break;
              }
              case 72: {
                TradeTime = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Symbol = input.ReadString();
                break;
              }
              case 18: {
                Expiry = input.ReadString();
                break;
              }
              case 26: {
                Strike = input.ReadString();
                break;
              }
              case 34: {
                Right = input.ReadString();
                break;
              }
              case 42: {
                Dir = input.ReadString();
                break;
              }
              case 49: {
                Volume = input.ReadDouble();
                break;
              }
              case 57: {
                Price = input.ReadDouble();
                break;
              }
              case 65: {
                Amount = input.ReadDouble();
                break;
              }
              case 72: {
                TradeTime = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class OptionItem : pb::IMessage<OptionItem>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OptionItem> _parser = new pb::MessageParser<OptionItem>(() => new OptionItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OptionItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TigerOpenAPI.Quote.Pb.OptionTopData.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OptionItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OptionItem(OptionItem other) : this() {
          symbol_ = other.symbol_;
          expiry_ = other.expiry_;
          strike_ = other.strike_;
          right_ = other.right_;
          totalAmount_ = other.totalAmount_;
          totalVolume_ = other.totalVolume_;
          totalOpenInt_ = other.totalOpenInt_;
          volumeToOpenInt_ = other.volumeToOpenInt_;
          latestPrice_ = other.latestPrice_;
          updateTime_ = other.updateTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OptionItem Clone() {
          return new OptionItem(this);
        }

        /// <summary>Field number for the "symbol" field.</summary>
        public const int SymbolFieldNumber = 1;
        private string symbol_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Symbol {
          get { return symbol_; }
          set {
            symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "expiry" field.</summary>
        public const int ExpiryFieldNumber = 2;
        private string expiry_ = "";
        /// <summary>
        /// formate:yyyyMMdd
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Expiry {
          get { return expiry_; }
          set {
            expiry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "strike" field.</summary>
        public const int StrikeFieldNumber = 3;
        private string strike_ = "";
        /// <summary>
        /// strike price
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Strike {
          get { return strike_; }
          set {
            strike_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "right" field.</summary>
        public const int RightFieldNumber = 4;
        private string right_ = "";
        /// <summary>
        /// CALL/PUT
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Right {
          get { return right_; }
          set {
            right_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "totalAmount" field.</summary>
        public const int TotalAmountFieldNumber = 5;
        private double totalAmount_;
        /// <summary>
        /// total trade amount
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double TotalAmount {
          get { return totalAmount_; }
          set {
            totalAmount_ = value;
          }
        }

        /// <summary>Field number for the "totalVolume" field.</summary>
        public const int TotalVolumeFieldNumber = 6;
        private double totalVolume_;
        /// <summary>
        /// total trade volume
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double TotalVolume {
          get { return totalVolume_; }
          set {
            totalVolume_ = value;
          }
        }

        /// <summary>Field number for the "totalOpenInt" field.</summary>
        public const int TotalOpenIntFieldNumber = 7;
        private double totalOpenInt_;
        /// <summary>
        /// open interest
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double TotalOpenInt {
          get { return totalOpenInt_; }
          set {
            totalOpenInt_ = value;
          }
        }

        /// <summary>Field number for the "volumeToOpenInt" field.</summary>
        public const int VolumeToOpenIntFieldNumber = 8;
        private double volumeToOpenInt_;
        /// <summary>
        /// Volume to Open Interest
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double VolumeToOpenInt {
          get { return volumeToOpenInt_; }
          set {
            volumeToOpenInt_ = value;
          }
        }

        /// <summary>Field number for the "latestPrice" field.</summary>
        public const int LatestPriceFieldNumber = 9;
        private double latestPrice_;
        /// <summary>
        /// option latest price
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LatestPrice {
          get { return latestPrice_; }
          set {
            latestPrice_ = value;
          }
        }

        /// <summary>Field number for the "updateTime" field.</summary>
        public const int UpdateTimeFieldNumber = 10;
        private long updateTime_;
        /// <summary>
        /// uptate timestamp
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long UpdateTime {
          get { return updateTime_; }
          set {
            updateTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OptionItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OptionItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Symbol != other.Symbol) return false;
          if (Expiry != other.Expiry) return false;
          if (Strike != other.Strike) return false;
          if (Right != other.Right) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalAmount, other.TotalAmount)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalVolume, other.TotalVolume)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalOpenInt, other.TotalOpenInt)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(VolumeToOpenInt, other.VolumeToOpenInt)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LatestPrice, other.LatestPrice)) return false;
          if (UpdateTime != other.UpdateTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
          if (Expiry.Length != 0) hash ^= Expiry.GetHashCode();
          if (Strike.Length != 0) hash ^= Strike.GetHashCode();
          if (Right.Length != 0) hash ^= Right.GetHashCode();
          if (TotalAmount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalAmount);
          if (TotalVolume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalVolume);
          if (TotalOpenInt != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalOpenInt);
          if (VolumeToOpenInt != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(VolumeToOpenInt);
          if (LatestPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LatestPrice);
          if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Symbol.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Symbol);
          }
          if (Expiry.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Expiry);
          }
          if (Strike.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Strike);
          }
          if (Right.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Right);
          }
          if (TotalAmount != 0D) {
            output.WriteRawTag(41);
            output.WriteDouble(TotalAmount);
          }
          if (TotalVolume != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(TotalVolume);
          }
          if (TotalOpenInt != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(TotalOpenInt);
          }
          if (VolumeToOpenInt != 0D) {
            output.WriteRawTag(65);
            output.WriteDouble(VolumeToOpenInt);
          }
          if (LatestPrice != 0D) {
            output.WriteRawTag(73);
            output.WriteDouble(LatestPrice);
          }
          if (UpdateTime != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(UpdateTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Symbol.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Symbol);
          }
          if (Expiry.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Expiry);
          }
          if (Strike.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Strike);
          }
          if (Right.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Right);
          }
          if (TotalAmount != 0D) {
            output.WriteRawTag(41);
            output.WriteDouble(TotalAmount);
          }
          if (TotalVolume != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(TotalVolume);
          }
          if (TotalOpenInt != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(TotalOpenInt);
          }
          if (VolumeToOpenInt != 0D) {
            output.WriteRawTag(65);
            output.WriteDouble(VolumeToOpenInt);
          }
          if (LatestPrice != 0D) {
            output.WriteRawTag(73);
            output.WriteDouble(LatestPrice);
          }
          if (UpdateTime != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(UpdateTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Symbol.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
          }
          if (Expiry.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Expiry);
          }
          if (Strike.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Strike);
          }
          if (Right.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Right);
          }
          if (TotalAmount != 0D) {
            size += 1 + 8;
          }
          if (TotalVolume != 0D) {
            size += 1 + 8;
          }
          if (TotalOpenInt != 0D) {
            size += 1 + 8;
          }
          if (VolumeToOpenInt != 0D) {
            size += 1 + 8;
          }
          if (LatestPrice != 0D) {
            size += 1 + 8;
          }
          if (UpdateTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OptionItem other) {
          if (other == null) {
            return;
          }
          if (other.Symbol.Length != 0) {
            Symbol = other.Symbol;
          }
          if (other.Expiry.Length != 0) {
            Expiry = other.Expiry;
          }
          if (other.Strike.Length != 0) {
            Strike = other.Strike;
          }
          if (other.Right.Length != 0) {
            Right = other.Right;
          }
          if (other.TotalAmount != 0D) {
            TotalAmount = other.TotalAmount;
          }
          if (other.TotalVolume != 0D) {
            TotalVolume = other.TotalVolume;
          }
          if (other.TotalOpenInt != 0D) {
            TotalOpenInt = other.TotalOpenInt;
          }
          if (other.VolumeToOpenInt != 0D) {
            VolumeToOpenInt = other.VolumeToOpenInt;
          }
          if (other.LatestPrice != 0D) {
            LatestPrice = other.LatestPrice;
          }
          if (other.UpdateTime != 0L) {
            UpdateTime = other.UpdateTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Symbol = input.ReadString();
                break;
              }
              case 18: {
                Expiry = input.ReadString();
                break;
              }
              case 26: {
                Strike = input.ReadString();
                break;
              }
              case 34: {
                Right = input.ReadString();
                break;
              }
              case 41: {
                TotalAmount = input.ReadDouble();
                break;
              }
              case 49: {
                TotalVolume = input.ReadDouble();
                break;
              }
              case 57: {
                TotalOpenInt = input.ReadDouble();
                break;
              }
              case 65: {
                VolumeToOpenInt = input.ReadDouble();
                break;
              }
              case 73: {
                LatestPrice = input.ReadDouble();
                break;
              }
              case 80: {
                UpdateTime = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Symbol = input.ReadString();
                break;
              }
              case 18: {
                Expiry = input.ReadString();
                break;
              }
              case 26: {
                Strike = input.ReadString();
                break;
              }
              case 34: {
                Right = input.ReadString();
                break;
              }
              case 41: {
                TotalAmount = input.ReadDouble();
                break;
              }
              case 49: {
                TotalVolume = input.ReadDouble();
                break;
              }
              case 57: {
                TotalOpenInt = input.ReadDouble();
                break;
              }
              case 65: {
                VolumeToOpenInt = input.ReadDouble();
                break;
              }
              case 73: {
                LatestPrice = input.ReadDouble();
                break;
              }
              case 80: {
                UpdateTime = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
